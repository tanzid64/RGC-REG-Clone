generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Service {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  skills    Skill[]
  User      User[]
}

// A service can have multiple skills
model Skill {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  serviceId String
  service   Service  @relation(fields: [serviceId], references: [id])
}

model Industry {
  id        String    @id @default(cuid())
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  companies Company[]
}

// Every company must be under an industry
model Company {
  id         String   @id @default(cuid())
  name       String
  logo       String?
  size       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  industryId String
  industry   Industry @relation(fields: [industryId], references: [id])
  User       User[]
}

model JobPosition {
  id    String @id @default(cuid())
  title String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

// One user must have a job position
// One user must have a company
// One user must have a service
model User {
  id       String  @id @default(cuid())
  fullName String
  email    String  @unique
  phone    String  @unique
  avatar   String?
  password String

  jobPositionId String
  jobPosition   JobPosition @relation(fields: [jobPositionId], references: [id])

  companyId String
  company   Company @relation(fields: [companyId], references: [id])

  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Otp {
  id        String   @id @default(cuid())
  otp       String
  createdAt DateTime @default(now())
  expiredAt DateTime
}

